@#0- Install Java, Maven & Tesseract:@#q
@bash
sudo apt install default-jdk      #Check version with: java -version
sudo apt install maven            #Check version with: mvn --version
sudo apt install tesseract-ocr -y #This one here installs all available languages: sudo apt install tesseract-ocr-all -y
@bashq
You can navigate to this directory to find the language data files. Such as: spa.traineddata, eng.traineddata, etc.
@bash
cd /usr/share/tesseract-ocr/4.0/tessdata/
@bashq
@#1- Initial project setup:@#q
Go to the directory you wanna put your project on. Desktop or Documents should do.
Open the terminal and enter:
@bash
#This will generate a directory called APP_NAME in current directory. Inside, you'll find the pom.xml. src/main/java/COMPANY_NAME/APP_NAME is where your code goes.
mvn archetype:generate -DgroupId=COMPANY_NAME -DartifactId=APP_NAME -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
@bashq

Add these dependencies to the pom.xml

This one is a must!
@markup
<!--look for <dependencies> tag-->
<!--inside, put this dependency:-->
 <dependency>
     <groupId>net.sourceforge.tess4j</groupId>
     <artifactId>tess4j</artifactId>
     <version>5.8.0</version>
 </dependency>
@markupq
[1] This one allows to run a lightweight .jar with mvn 
@markup
<!--look for <build> tag-->
<!--look for <plugins> tag-->
<!--inside, put this plugin:-->
 <plugin>
     <groupId>org.codehaus.mojo</groupId>
     <artifactId>exec-maven-plugin</artifactId>
     <version>3.0.0</version>
     <executions>
         <execution>
             <goals>
                 <goal>java</goal>
             </goals>
         </execution>
     </executions>
     <configuration>
         <mainClass>COMPANY_NAME.APP_NAME.MAIN_CLASS</mainClass>
     </configuration>
 </plugin>
@markupq
[2] This one generates a self-sufficient "fat-jar" that includes all dependencies
@markup
<!--look for <build> tag-->
<!--look for <plugins> tag-->
<!--inside, put this plugin:-->
 <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-assembly-plugin</artifactId>
     <version>3.3.0</version>
     <executions>
         <execution>
             <phase>package</phase>
             <goals>
                 <goal>single</goal>
             </goals>
             <configuration>
                 <descriptorRefs>
                     <descriptorRef>jar-with-dependencies</descriptorRef>
                 </descriptorRefs>
                 <archive>
                     <manifest>
                         <mainClass>COMPANY_NAME.APP_NAME.MAIN_CLASS</mainClass>
                     </manifest>
                 </archive>
             </configuration>
         </execution>
     </executions>
 </plugin>
@markupq

@#2- Time to code!:@#q
go to src/main/java/COMPANY_NAME/APP_NAME

let's create a class with a main method (i.e.: App.java)

Inside, let's put this code:
@java
package COMPANY_NAME.APP_NAME;
import java.io.*;
import net.sourceforge.tess4j.*;

public class App
{
    public static void main( String[] args ) throws Exception
    {
      Tesseract t = new Tesseract();
      if (args.length == 1)
        {
          t.setDatapath("/usr/share/tesseract-ocr/4.00/tessdata"); //this one is tricky!**
          t.setLanguage("spa+eng"); //defaults to english if not specified
          String fulltext = t.doOCR(new File(args[0]));
          System.out.println(fulltext);
        }
    }
}
@javaq

**This path contains the language data files. you can use a different one if you want.
  More languages can be found @a here @aq  @href https://tesseract-ocr.github.io/tessdoc/Data-Files @hrefq


@#3- Let's package and run!:@#q
@bash
mvn clean package
@bashq
[1] using exec-maven-plugin...
@bash
mvn exec:java -Dexec.args="path/to/image_file"
@bashq

[2] using maven-assembly-plugin...
@bash
java -jar target/APP_NAME.jar "path/to/image_file"
@bashq
